function bestiaryCreateItem(player: player, name: string):

    set metadata tag "bestiary" of {_player} to chest with 6 row named "%{_name}%"
    
    set {_u} to uuid of {_player}
    set {_borderIndex} to 0

    loop 54 times:

        if {_borderIndex} is not 21, 22, 23, 31 or 58:
            set slot {_borderIndex} of metadata tag "bestiary" of {_player} to black stained glass pane named "&8Border"

        if {_borderIndex} is 10, 16, 19, 25, 28, 34, 37, 38, 42 or 43:
            set slot {_borderIndex} of metadata tag "bestiary" of {_player} to gray stained glass pane named "&7Border"

        if {_borderIndex} is 49:
            set slot {_borderIndex} of metadata tag "bestiary" of {_player} to barrier named "&cClose"

        if {_borderIndex} is 21, 22, 23 or 31:
            set {_list::*} to "Farming", "Slaying", "Mining" and "Boss"
            loop {_list::*}:
                set {guiSystem/bestiaryCore._%loop-value-2%::_collected} to 0
                set {guiSystem/bestiaryCore._%loop-value-2%::_progress} to 0
                loop {bestiary::%loop-value-2%::*}:
                    if {bestiary::%loop-value-3%::collected::%{_u}%} is set:
                        add 1 to {guiSystem/bestiaryCore._%loop-value-2%::_collected}
                    add 1 to {guiSystem/bestiaryCore._%loop-value-2%::_progress}
                set {guiSystem/bestiaryCore._%loop-value-2%::_addBar} to ""
                loop 15 times:
                    if {guiSystem/bestiaryCore._%loop-value-2%::_collected} >= ({guiSystem/bestiaryCore._%loop-value-2%::_progress} / 15) * loop-value-3:
                        set {guiSystem/bestiaryCore._%loop-value-2%::_addBar} to "%{guiSystem/bestiaryCore._%loop-value-2%::_addBar}%&f&m "
                    else:
                        set {guiSystem/bestiaryCore._%loop-value-2%::_addBar} to "%{guiSystem/bestiaryCore._%loop-value-2%::_addBar}%&7&m "

        if {_borderIndex} is 21:
            set {_farmingString} to "Farming"
            set slot {_borderIndex} of metadata tag "bestiary" of {_player} to stone hoe named "<##5EB6B6>Farming" with lore "&7View your farming bestiary", "&7and items you have discovered.", "","&7Collection: &f%{guiSystem/bestiaryCore._Farming::_collected}%/%{guiSystem/bestiaryCore._Farming::_progress}%", {guiSystem/bestiaryCore._Farming::_addBar}, "" and "&eView (Right Click)" with all flags hidden
            
        if {_borderIndex} is 22:
            set {_slayingString} to "Slaying"
            set slot {_borderIndex} of metadata tag "bestiary" of {_player} to stone sword named "<##5EB6B6>Slaying" with lore "&7View your slaying bestiary", "&7and items you have discovered.", "", "&7Collection: &f%{guiSystem/bestiaryCore._Slaying::_collected}%/%{guiSystem/bestiaryCore._Slaying::_progress}%", {guiSystem/bestiaryCore._Slaying::_addBar}, "", "&eView (Right Click)" with all flags hidden

        if {_borderIndex} is 23:
            set {_miningString} to "Mining"
            set slot {_borderIndex} of metadata tag "bestiary" of {_player} to stone pickaxe named "<##5EB6B6>Mining" with lore "&7View your mining bestiary", "&7and items you have discovered.", "", "&7Collection: &f%{guiSystem/bestiaryCore._Mining::_collected}%/%{guiSystem/bestiaryCore._Mining::_progress}%", {guiSystem/bestiaryCore._Mining::_addBar}, "", "&eView (Right Click)" with all flags hidden

        if {_borderIndex} is 31:
            set {_bossString} to "Boss"
            set slot {_borderIndex} of metadata tag "bestiary" of {_player} to wither skeleton skull named "<##5EB6B6>Boss" with lore "&7View your boss bestiary", "&7and items you have discovered.",  "", "&7Collection: &f%{guiSystem/bestiaryCore._Boss::_collected}%/%{guiSystem/bestiaryCore._Boss::_progress}%", {guiSystem/bestiaryCore._Boss::_addBar}, "", "&eView (Right Click)" with all flags hidden

        add 1 to {_borderIndex}

    open (metadata tag "bestiary" of {_player}) to {_player}

function bestiaryGetLeaderboardRank(position: number, target: string) :: string:

    loop sorted indices of {bestiary::%{_target}%::collected::*} in descending order:
        add 1 to {_counter}
        if {_counter} is {_position}:
            return loop-value

function bestiaryGetLeaderboardItem(player: player, position: number, return: string, target: string) :: item:

    set {_user} to {_return} parsed as offline player
    set {_rank} to ({_user})'s head named "<##5EB6B6>%{_user}%" with lore "&7This player have mastered %{_target}% and", "&7is currently on the leaderboard.", "", "&7Collection: <##5EB6B6>%bestiaryGetFormat(round({bestiary::%{_target}%::collected::%{_user}'s uuid%}))%", "&7Ranked: <##5EB6B6>##%{_position}%" with all flags hidden
            
    if {_player} is not {_user}:
        if {bestiary::%{_target}%::collected::%{_player}'s uuid%} is greater than {bestiary::%{_target}%::collected::%{_user}'s uuid%}:
            add "", "&7You are above this player." to lore of {_rank}   
        else:
            add "", "&7The difference between you" and "&7and this player is <##5EB6B6>%bestiaryGetFormat(round({bestiary::%{_target}%::collected::%{_user}'s uuid%} - {bestiary::%{_target}%::collected::%{_player}'s uuid%}))%&7." to lore of {_rank}
    else:
        add "", "&7This is <##5EB6B6>you&7, well done." to lore of {_rank}   
    return {_rank}

function bestiaryCreateLeaderboard(player: player, target: string, name: string):

    set metadata tag "bestiaryLeaderboard" of {_player} to chest with 6 row named "%{_name}%"
    
    set {_u} to uuid of {_player}
    set {_borderIndex} to 0

    loop 54 times:

        if {_borderIndex} is not 20, 21, 22, 23, 24 or 58:
            set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to black stained glass pane named "&8Border"

        if {_borderIndex} is 10, 11, 12, 13, 14, 15, 16, 19, 25, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42 or 43:
            set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to gray stained glass pane named "&7Border"

        set {_unkown} to player skull with nbt "{display:{Name:""Question Mark""},SkullOwner:{Id:""f051234a-8c3d-45d5-8e78-df729dd0da8c"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMjcwNWZkOTRhMGM0MzE5MjdmYjRlNjM5YjBmY2ZiNDk3MTdlNDEyMjg1YTAyYjQzOWUwMTEyZGEyMmIyZTJlYyJ9fX0=""}]}}}" named "&CUnkown" with lore "&7This player haven't logged on the server", "&7yet and have therefore not been added", "&7to the leaderboard system."  with all flags hidden

        if {_borderIndex} is 49:
            set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to barrier named "&cClose"

        if {_borderIndex} is 20:

            set {_return} to bestiaryGetLeaderboardRank(1, {_target})
            set {_rank} to bestiaryGetLeaderboardItem({_player}, 1, {_return}, {_target})
            if {_return} is set:
                set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to {_rank}
            else:
                set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to {_unkown}

        if {_borderIndex} is 21:

            set {_return} to bestiaryGetLeaderboardRank(2, {_target})
            set {_rank} to bestiaryGetLeaderboardItem({_player}, 2, {_return}, {_target})
            if {_return} is set:
                set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to {_rank}
            else:
                set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to {_unkown}

        if {_borderIndex} is 22:

            set {_return} to bestiaryGetLeaderboardRank(3, {_target})
            set {_rank} to bestiaryGetLeaderboardItem({_player}, 3, {_return}, {_target})
            if {_return} is set:
                set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to {_rank}
            else:
                set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to {_unkown}

        if {_borderIndex} is 23:

            set {_return} to bestiaryGetLeaderboardRank(4, {_target})
            set {_rank} to bestiaryGetLeaderboardItem({_player}, 4, {_return}, {_target})
            if {_return} is set:
                set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to {_rank}
            else:
                set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to {_unkown}

        if {_borderIndex} is 24:

            set {_return} to bestiaryGetLeaderboardRank(5, {_target})
            set {_rank} to bestiaryGetLeaderboardItem({_player}, 5, {_return}, {_target})
            if {_return} is set:
                set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to {_rank}
            else:
                set slot {_borderIndex} of metadata tag "bestiaryLeaderboard" of {_player} to {_unkown}

        add 1 to {_borderIndex}

    open (metadata tag "bestiaryLeaderboard" of {_player}) to {_player}

function bestiaryCheckItem(player: player, item: string, amount: number):

    set {_u} to uuid of {_player}
    if {_amount} is greater than 0:
        if {bestiary::%{_item}%::collected::%{_u}%} is not set:
            set {bestiary::%{_item}%::collected::%{_u}%} to 0
            if {level::%{_u}%} is greater than 4:
                play sound "BLOCK_NOTE_BLOCK_BELL" with volume 0.2 to {_player}
                send "&7&m                                                                  " to {_player}
                send "" to {_player}
                send "  <##508a7f>[<##5EB6B6>&lBESTIARY<##508a7f>]" to {_player}
                send "" to {_player}
                send "    &fNew item discovered! <##5EB6B6>%{_item}%&f has been added to your bestiary." to {_player}
                send "" to {_player}
                send "&7&m                                                                  " to {_player}
        if {event::farming::status} is true:
            loop {bestiary::Farming::*}:
                if {_item} contains loop-value:
                    add {_amount} to {event::farming::collected::%{_u}%}
        else if {event::mining::status} is true:
            loop {bestiary::Mining::*}:
                if {_item} contains loop-value:
                    add {_amount} to {event::mining::collected::%{_u}%}
        else if {event::winter::status} is true:
            loop {bestiary::Slaying::*} or {bestiary::Boss::*}:
                if {_item} contains loop-value:
                    set {_random} to random integer between 0 and 2
                    if {_item} is in {bestiary::Boss::*}:
                        add round({_random}) * 4 to {event::snowball::collected::%{_u}%} 
                    else:   
                        add round({_random}) to {event::snowball::collected::%{_u}%}
                    give round({_random}) of {items::otherItems::2} to {_player}
        add {_amount} to {bestiary::%{_item}%::collected::%{_u}%}

function bestiaryGetFormat(number: number) :: text:

    set {_s::*} to "|K|M|B|T" split at "|"
    if {_number} < 1000:
        return "%{_number}%"
    else:
        return "%({_number})/(1000^(min(floor(log({_number})/3), size of {_s::*})))%%{_s::%min((floor(log({_number})/3 + 1)), size of {_s::*})%}%"   

function bestiaryGetRank(player: player, target: string) :: integer:

    set {_u} to uuid of {_player}
    set {_top::*} to sorted indices of {bestiary::%{_target}%::collected::*} in descending order

    set {_rank} to 1
    loop {_top::*}:
        add 1 to {_counter}
        if {bestiary::%{_target}%::collected::%{_top::%{_counter}%}%} is greater than {bestiary::%{_target}%::collected::%{_u}%}:
            add 1 to {_rank}
        else:
            return {_rank}

function bestiaryGetItemLore(player: player, target: string) :: item:

    set {_u} to uuid of {_player}

    loop {items::dropItems::*}:
        if uncolored name of loop-value is {_target}:
            set {_return} to loop-value
        
            clear lore of {_return}
            add "&7Here is your %{_target}% progression and", "&7progress to the next skill level.", "" to lore of {_return} 
    
            if {bestiary::%{_target}%::collected::%{_u}%} is not set:
                return gray dye named "&c%{_target}%" with lore "&7You have not yet discovered this item", "&7and have therefore no progress."

            set {_collected} to round({bestiary::%{_target}%::collected::%{_u}%})
            set {_rank} to bestiaryGetRank({_player}, {_target})
            
            if {_collected} is between 0 and {bestiary::progress::%{_target}%::1}:
                set {_last} to "&7Skill: &8Beginner"
                add "&7Collected: &8%bestiaryGetFormat({_collected})%", "&7Ranked: &8##%{_rank}%", "", {_last} to lore of {_return} 
                set {_addBar} to "&8&m "
                set {_progress} to {bestiary::progress::%{_target}%::2}
            else if {_collected} is between {bestiary::progress::%{_target}%::1} + 1 and {bestiary::progress::%{_target}%::2}:
                set {_last} to "&7Skill: &eNovice"
                add "&7Collected: &e%bestiaryGetFormat({_collected})%", "&7Ranked: &e##%{_rank}%", "", {_last} to lore of {_return} 
                set {_addBar} to "&e&m "
                set {_progress} to {bestiary::progress::%{_target}%::2}
            else if {_collected} is between {bestiary::progress::%{_target}%::2} + 1 and {bestiary::progress::%{_target}%::3}:
                set {_last} to "&7Skill: &bAdequate"
                add "&7Collected: &b%bestiaryGetFormat({_collected})%", "&7Ranked: &b##%{_rank}%", "", {_last} to lore of {_return} 
                set {_addBar} to "&b&m "
                set {_progress} to {bestiary::progress::%{_target}%::3}
            else if {_collected} is between {bestiary::progress::%{_target}%::3} + 1 and {bestiary::progress::%{_target}%::4}:
                set {_last} to "&7Skill: &9Proficient"
                add "&7Collected: &9%bestiaryGetFormat({_collected})%", "&7Ranked: &9##%{_rank}%", "", {_last} to lore of {_return} 
                set {_addBar} to "&9&m "
                set {_progress} to {bestiary::progress::%{_target}%::4}
            else:
                set {_last} to "&7Skill: &6Expert"
                add "&7Collected: &6%bestiaryGetFormat({_collected})%", "&7Ranked: &6##%{_rank}%", "", {_last} to lore of {_return} 
                set {_addBar} to "&6&m "
                
            set name of {_return} to "<##5EB6B6>%{_target}%"

            set {_bar} to ""
            loop 18 times:
                if {_progress} is set:
                    if {_collected} >= (({_progress} / 18) * loop-number):
                        set {_bar} to "%{_bar}%%{_addBar}%"
                    else:
                        set {_bar} to "%{_bar}%&7&m "
                else:
                    set {_bar} to "%{_bar}%%{_addBar}%"

            add "%{_bar}%", "", "&eLeaderboard (Right Click)" to lore of {_return}

            return {_return}
            stop loop

function bestiaryCreateSection(player: player, id: string, name: string, items: strings):

    set metadata tag "%{_id}%" of {_player} to chest with 6 row named "%{_name}%"
    
    set {_u} to uuid of {_player}
    set {_borderIndex} to 0

    loop 54 times:

        if {_borderIndex} is not 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 29, 30, 31, 32 or 33:
            set slot {_borderIndex} of metadata tag "%{_id}%" of {_player} to black stained glass pane named "&8Border"

        if {_borderIndex} is 10, 16, 19, 25, 28, 34, 37 or 43:
            set slot {_borderIndex} of metadata tag "%{_id}%" of {_player} to gray stained glass pane named "&7Border"

        if {_borderIndex} is 49:
            set slot {_borderIndex} of metadata tag "%{_id}%" of {_player} to barrier named "&cClose"

        if {_borderIndex} is 50 or 48:
            set {_page::*} to split "%{_name}%" at "Page "
            set {_page} to {_page::2} parsed as integer
            
            if {_page} is 1 or 2:
                if {_borderIndex} is 50:
                    set slot {_borderIndex} of metadata tag "%{_id}%" of {_player} to arrow named "&fPage %{_page} + 1%" with lore "&7Go to the next page", "&7of this bestiary.", "", "&eNext (Right Click)" with all flags hidden

            if {_page} is 2 or 3:
                if {_borderIndex} is 48:
                    set slot {_borderIndex} of metadata tag "%{_id}%" of {_player} to arrow named "&fPage %{_page} - 1%" with lore "&7Go to the previous page", "&7of this bestiary.", "", "&ePrevious (Right Click)" with all flags hidden


            set {_startIndex} to 11
            set {_itemIndex} to 15 * ({_page} - 1) + 1
            loop (size of {_items::*}) + 8 times:
                if {_startIndex} is not 16, 17, 18, 19, 25, 26, 27 or 28:
                    set slot {_startIndex} of metadata tag "%{_id}%" of {_player} to bestiaryGetItemLore({_player}, {_items::%{_itemIndex}%})
                    add 1 to {_itemIndex}
                add 1 to {_startIndex}

        add 1 to {_borderIndex}

    open (metadata tag "%{_id}%" of {_player}) to {_player}

on load:

    set {bestiary::progress::Wheat::*} to (1000, 5000, 25000, 100000)
    set {bestiary::progress::Potato::*} to (1000, 5000, 25000, 100000)
    set {bestiary::progress::Carrot::*} to (1000, 5000, 25000, 100000)
    set {bestiary::progress::Wart::*} to (1000, 5000, 25000, 100000)
    set {bestiary::progress::Berries::*} to (500, 1000, 5000, 25000)
    set {bestiary::progress::Raw Beef::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::Raw Mutton::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::Raw Chicken::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::Egg::*} to (50, 100, 250, 500)
    set {bestiary::progress::Leather::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::Feather::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::Wool::*} to (250, 500, 1000, 5000)

    set {bestiary::progress::Rotten Flesh::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::Arrow::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::Bone::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::Platinum Teeth::*} to (100, 250, 500, 1000)
    set {bestiary::progress::Red Mushroom::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::Brown Mushroom::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::String::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::Web::*} to (100, 250, 500, 1000)
    set {bestiary::progress::Spikes::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::Gold Nugget::*} to (250, 500, 1000, 5000)
    set {bestiary::progress::Faded Rose::*} to (100, 250, 500, 1000)
    set {bestiary::progress::Grasp Leaf::*} to (5, 25, 50, 100)
    set {bestiary::progress::Moss Hunk::*} to (25, 50, 100, 250)
    set {bestiary::progress::Moss Turf::*} to (50, 100, 250, 500)

    set {bestiary::progress::Ice Shard::*} to (500, 1000, 5000, 25000)

    set {bestiary::progress::Rooted Skin::*} to (50, 100, 250, 500)
    set {bestiary::progress::Rooted Heart::*} to (50, 100, 250, 500)
    set {bestiary::progress::Enormous Shroom::*} to (50, 100, 250, 500)
    set {bestiary::progress::Inured Demis::*} to (50, 100, 250, 500)
    set {bestiary::progress::Deity Shard::*} to (50, 100, 250, 500)

on inventory click:

    if event-inventory = (metadata tag "bestiary" or "bestiarySection" of player):

        set {bestiary::Farming::*} to ("Raw Beef", "Raw Mutton", "Raw Chicken", "Egg", "Wheat", "Leather", "Wool", "Feather", "Potato", "Carrot", "Wart", "Berries")
        set {bestiary::Slaying::*} to ("Rotten Flesh", "Arrow", "Bone", "Platinum Teeth", "Red Mushroom", "Brown Mushroom", "String", "Web", "Spikes", "Faded Rose", "Gold Nugget", "Grasp Leaf", "Moss Hunk", "Moss Turf")
        set {bestiary::Mining::*} to ("Ice Shard")
        set {bestiary::Boss::*} to ("Rooted Skin", "Rooted Heart", "Enormous Shroom", "Inured Demis", "Deity Shard")

    if event-inventory = (metadata tag "bestiary" of player):

        cancel event

        if index of event-slot is 49:
            open (metadata tag "menu" of player) to player
        else if index of event-slot is 21:
            bestiaryCreateSection(player, "bestiarySection", "&8Farming Bestiary Page 1", {bestiary::Farming::*})
        else if index of event-slot is 22:
            bestiaryCreateSection(player, "bestiarySection", "&8Slaying Bestiary Page 1", {bestiary::Slaying::*})
        else if index of event-slot is 23:
            bestiaryCreateSection(player, "bestiarySection", "&8Mining Bestiary Page 1", {bestiary::Mining::*})
        else if index of event-slot is 31:
            bestiaryCreateSection(player, "bestiarySection", "&8Boss Bestiary Page 1", {bestiary::Boss::*})


    else if uncolored name of player's current inventory contains "Farming Bestiary", "Slaying Bestiary", "Mining Bestiary" or "Boss Bestiary":

        cancel event

        if index of event-slot is 49:
            open (metadata tag "bestiary" of player) to player
        else if index of event-slot is 50 or 48:

            set {_name::*} to split uncolored name of event-inventory at " "
            set {_page} to {_name::4} parsed as integer
            set {_name} to {_name::1}

            set {_list::*} to {bestiary::%{_name}%::*}
            
            if index of event-slot is 50:
                if {_page} is not 3:
                    add 1 to {_page}
            else if index of event-slot is 48:
                if {_page} is not 1:
                    remove 1 from {_page}
            bestiaryCreateSection(player, "bestiarySection", "&8%{_name}% Bestiary Page %{_page}%", {_list::*})
        else if index of event-slot is 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 29, 30, 31, 32 or 33:

            if slot index of event-slot of player's current inventory is not air:
                if {bestiary::%uncolored name of event-item%::collected::%player's uuid%} is set:
                    bestiaryCreateLeaderboard(player, (uncolored name of event-item), "&8%uncolored name of event-item% Leaderboard")
    else if event-inventory = (metadata tag "bestiaryLeaderboard" of player):
        cancel event
        if index of event-slot is 49:

            set {_name::*} to split uncolored name of event-inventory at " Leaderboard"
            set {_name} to {_name::1}

            loop {bestiary::Farming::*}:
                if {_name} is loop-value:
                    set {_farming} to true

            loop {bestiary::Slaying::*}:
                if {_name} is loop-value:
                    set {_slaying} to true

            loop {bestiary::Mining::*}:
                if {_name} is loop-value:
                    set {_mining} to true

            loop {bestiary::Boss::*}:
                if {_name} is loop-value:
                    set {_boss} to true

            if {_farming} is true:
                bestiaryCreateSection(player, "bestiarySection", "&8Farming Bestiary Page 1", {bestiary::Farming::*})
            else if {_slaying} is true:
                bestiaryCreateSection(player, "bestiarySection", "&8Slaying Bestiary Page 1", {bestiary::Slaying::*})
            else if {_mining} is true:
                bestiaryCreateSection(player, "bestiarySection", "&8Mining Bestiary Page 1", {bestiary::Mining::*})
            else if {_boss} is true:
                bestiaryCreateSection(player, "bestiarySection", "&8Boss Bestiary Page 1", {bestiary::Boss::*})
        