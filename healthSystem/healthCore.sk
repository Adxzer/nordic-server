command /health [<text>] [<text>] [<text>] [<text>] [<text>]:
    permission: op
    permission message: Unknown command. Type "/help" for help.
    trigger:

        if arg-1 is set:

            if arg-1 is "user":
     
                if arg-2 is set:

                    if arg-2 parsed as offline player is offline player:

                        set {_player} to arg-2 parsed as offline player
                        set {_u} to uuid of {_player}

                        if {level::%{_u}%} is set:

                            if arg-3 is set:

                                if arg-3 is "custom":

                                    if arg-4 is set:

                                        if arg-4 is "set":

                                            if arg-5 is set:

                                                set {_value} to arg-5 parsed as integer

                                                if arg-5 parsed as integer is integer:
                                                    send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » &fYou set <##5EB6B6>%arg-2%&f's max hearts to <##5EB6B6>%arg-5%&f."
                                                    set {health::maxHearts::%{_u}%} to {_value}
                                                    set {health::currentHearts::%{_u}%} to {health::maxHearts::%{_u}%}
                                                    set {health::customHearts::%{_u}%} to {health::maxHearts::%{_u}%}
                                                    heal player by 10 hearts

                                                else:
                                                    send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » <##5EB6B6>This argument must be an integer."

                                            else:
                                                send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » <##5EB6B6>Please specify an integer."
                                        else if arg-4 is "clear":

                                            if {health::customHearts::%{_u}%} is set:
                                                send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » &fYou cleared <##5EB6B6>%arg-2%&f's custom hearts&f."
                                                clear {health::customHearts::%{_u}%}
                                                set {health::currentHearts::%{_u}%} to {health::maxHearts::%{_u}%}

                                            else:
                                                send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » <##5EB6B6>There is no custom health for this player."                                            
                                        else if arg-4 is "check":

                                            if {health::customHearts::%{_u}%} is set:
                                                send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » &fThe custom hearts of <##5EB6B6>%arg-2%&f is <##5EB6B6>%{health::customHearts::%{_u}%}%&f."
                                            
                                            else:
                                                send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » <##5EB6B6>There is no custom health for this player."

                                        else:
                                            send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » <##5EB6B6>This command option does not exist."

                                    else:
                                        send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » <##5EB6B6>This command option does not exist."
                                else if arg-3 is "regen":
                                    send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » &fRegenerated <##5EB6B6>%arg-2%&f's health."
                                    set {health::currentHearts::%{_u}%} to {health::maxHearts::%{_u}%}
                                    heal player by 10 hearts

                                else:
                                    send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » <##5EB6B6>This command option does not exist."

                            else:
                                send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » <##5EB6B6>Please specify a command option."

                        else:
                            send "&6[MANA] » <##5EB6B6>This player has never been on the server."

                    else:
                        send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » <##5EB6B6>This player does not exist."

                else:
                    send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » <##5EB6B6>Please specify a player."  

            else:
                send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » <##5EB6B6>This command option does not exist."

        else:
            send "<##508a7f>[<##5EB6B6>&lHEALTH<##508a7f>] » <##5EB6B6>Please specify a command option."

on tab complete of "/health":

    if tab arg-1 is not "user": # add new options  
        clear {_tabCompletion::*}
        set {_tabCompletion::*} to ("user") # add new options
        set tab completions for position 1 to {_tabCompletion::*}

    if tab arg-1 is "user":
        clear {_tabCompletion::*}
        loop players:
            add loop-value to {_tabCompletion::*}
            set tab completions for position 2 to {_tabCompletion::*}

    set {_user} to tab arg-2 parsed as offline player
    set {_u} to uuid of {_user}
    if {level::%{_u}%} is set:

        if tab arg-3 is not "regen" or "custom": # add new options 
            clear {_tabCompletion::*}
            set {_tabCompletion::*} to ("regen", "custom") # add new options 
            set tab completions for position 3 to {_tabCompletion::*}

    if tab arg-3 is "custom":
        set {_tabCompletion::*} to ("set", "clear", "check") # add new options 
        set tab completions for position 4 to {_tabCompletion::*}

on rightclick:

    set {_lore::*} to lore of player's tool
    if uncolored {_lore::1} is "Consumable Item.":
        
        cancel event

        set {_u} to uuid of player
        set {_split::*} to split {_lore::4} at " "

        if {_split::3} contains "❤":
        
            set {_num::*} to split uncolored {_split::3} at "❤"
            set {_add} to {_num::1} parsed as integer

            if {health::currentHearts::%{_u}%} is not {health::maxHearts::%{_u}%}:
                
                if {health::currentHearts::%{_u}%} + {_add} is greater than {health::maxHearts::%{_u}%}:
                    set {health::currentHearts::%{_u}%} to {health::maxHearts::%{_u}%}
                    coreUpdateHearts(player)

                else:
                    add {_add} to {health::currentHearts::%{_u}%}
                    coreUpdateHearts(player)

                set {actionBarSet::%{_u}%} to true
                play sound "ENTITY_PLAYER_BURP" with volume 0.2 to player
                send action bar coreGetActionBar(player, "&aYou consumed %uncolored name of player's tool%!") to player
                remove 1 of player's tool from player
                wait 1 second
                set {actionBarSet::%{_u}%} to false

            else:

                set {actionBarSet::%{_u}%} to true
                send action bar coreGetActionBar(player, "<##5EB6B6>You already have max health!") to player
                wait 1 second
                set {actionBarSet::%{_u}%} to false