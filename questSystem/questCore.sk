function questNew(player: player, string: string):

    send "" to {_player}
    send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &fYou have started the quest <##5EB6B6>%{_string}%&f. Check your Quest Book to gain additional information how to finish this quest." to {_player}
    send "" to {_player}

function questComplete(player: player, strings: strings):

    send "" to {_player}
    send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &fYou have successfully completed the quest <##5EB6B6>%{_strings::1}%&f. As a reward for completing the quest you gained %{_strings::2}%." to {_player}
    send "" to {_player}

function questTalk(player: player):

    set {_random} to random integer between 1 and 3
    if {_random} is 1:
        play sound "ENTITY_VILLAGER_AMBIENT" at volume 0.2 to {_player}
    else if {_random} is 2:
        play sound "ENTITY_VILLAGER_YES" at volume 0.2 to {_player}
    else if {_random} is 3:
        play sound "ENTITY_VILLAGER_TRADE" at volume 0.2 to {_player}

function questBookGetQuest(player: player, quest: string) :: item:

    set {_u} to uuid of {_player}
   
    if {quests::%{_quest}%::completed::%{_u}%} is false:

        set {_talked} to {quests::%{_quest}%::interaction::%{_u}%::1}
        set {_book} to book named "<##5EB6B6>%{quests::%{_quest}%::name}%" with lore "&7%{quests::%{_quest}%::objective}%", ""

        add "&7&nObjective:" to lore of {_book}
        
        loop {quests::%{_quest}%::quota::*}:
            add "&8- &7%loop-value%" to lore of {_book}
        
        add "" and "&f[%{quests::%{_quest}%::coords}%]" to lore of {_book}

        if {_talked} is not true:
            add "&cYou haven't talked to this NPC yet." to lore of {_book}
        
        else:
            add "&fYou have started this quest." to lore of {_book}

        return {_book}
    else if {quests::%{_quest}%::talked::%{_u}%} is not true:

        if {quests::%{_quest}%::name} is set:
            set {_notTalked} to gray dye named "&f%{quests::%{_quest}%::name}%" with lore "&7%{quests::%{_quest}%::start}%"
            add "" and "&f[%{quests::%{_quest}%::coords}%]" to lore of {_notTalked}
            return {_notTalked} 
    
    else:
        return air

on rightclick:

    if uncolored name of event-item is "Quest Book":
    
        set metadata tag "quest" of player to chest with 6 row named "&8Quest Book"
        
        set {_quests::*} to ("firstSlay", "animalFood", "rootedChallenge", "mysteryItem", "luckyCarrot", "conjecture", "healthyCure", "botany", "shadeMatter", "lastBreath") # add new quests

        set {_borderIndex} to 0
        set {_questIndex} to 1
        set {_placeIndex} to 0
        
        loop 54 times:

            if {_borderIndex} is 7, 8, 16, 17, 25, 26, 34, 35, 43, 44, 52 or 53:
                if {_borderIndex} is 44:
                    set slot {_borderIndex} of metadata tag "quest" of player to barrier named "&cClose"
                else if {_borderIndex} is 35:
                
                    set {_questProgress} to paper named "<##5EB6B6>Quest Progress"
                    set {_completed} to 0
                    set {_bar} to ""

                    loop {_quests::*}:
                        if {quests::%loop-value-2%::completed::%player's uuid%} is true:
                            add 1 to {_completed}

                    add "&7You are currently have finished %{_completed}%/%size of {_quests::*}%", "&7of all the quests in the game." and "" to lore of {_questProgress}

                    loop 13 times:
                        if {_completed} >= (size of {_quests::*} / 13) * loop-number-2:
                            set {_bar} to "%{_bar}%&f&m "
                        else:
                            set {_bar} to "%{_bar}%&7&m "

                    add "%{_bar}%" to lore of {_questProgress}
                    set slot {_borderIndex} of metadata tag "quest" of player to {_questProgress}
                
                else:
                    set slot {_borderIndex} of metadata tag "quest" of player to black stained glass pane named "&8Border"
            
            else:
                if {_placeIndex} is not 7 or 8:
                    if questBookGetQuest(player, {_quests::%{_questIndex}%}) is book:
                        set slot {_placeIndex} of metadata tag "quest" of player to questBookGetQuest(player, {_quests::%{_questIndex}%})
                        add 1 to {_placeIndex}
                        add 1 to {_questIndex}
                    else if questBookGetQuest(player, {_quests::%{_questIndex}%}) is gray dye:
                        set slot {_placeIndex} of metadata tag "quest" of player to questBookGetQuest(player, {_quests::%{_questIndex}%})
                        add 1 to {_placeIndex}
                        add 1 to {_questIndex}
                    else if questBookGetQuest(player, {_quests::%{_questIndex}%}) is air:
                        add 1 to {_questIndex}
                else:
                    add 1 to {_placeIndex}

            add 1 to {_borderIndex}

        open (metadata tag "quest" of player) to player

on inventory click:

    if event-inventory = (metadata tag "quest" of player): 
        cancel event

        if index of event-slot is 44:
            close player's inventory

command /quest [<text>] [<text>] [<text>] [<text>] [<text>]:
    permission: op
    permission message: Unknown command. Type "/help" for help.
    trigger:

        if arg-1 is set:

            if arg-1 is "user":
     
                if arg-2 is set:

                    if arg-2 parsed as offline player is offline player:

                        set {_player} to arg-2 parsed as offline player
                        set {_u} to uuid of {_player}

                        if {level::%{_u}%} is set:

                            if arg-3 is set:

                                set {_quests::*} to ("firstSlay", "animalFood", "rootedChallenge", "mysteryItem", "luckyCarrot", "conjecture", "healthyCure", "botany", "shadeMatter", "lastBreath") # add new quests

                                if arg-3 is "clear":
                                    send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &fYou cleared all of <##5EB6B6>%arg-2%&f's quiz progress."
                                    loop {_quests::*}:
                                        clear {quests::%loop-value%::talked::%{_u}%}
                                        clear {quests::%loop-value%::completed::%{_u}%}
                                        clear {quests::%loop-value%::interaction::%{_u}%::*} 
                                else if arg-3 is "list":
                                    send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &fShowing quest status for <##5EB6B6>%arg-2%&f..."
                                    loop {_quests::*}:
                                        if {quests::%loop-value%::completed::%{_u}%} is true:
                                            set {_completed::%loop-value%} to "&f%loop-value% - <##5EB6B6>completed"
                                        else:
                                            set {_completed::%loop-value%} to "&f%loop-value% - &cnot completed"
                                        send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &f%{_completed::%loop-value%}%&f."
                                else if arg-3 is "set":

                                    if arg-4 is set:

                                        loop {_quests::*}:
                                            if arg-4 is loop-value:
                                                set {_quest} to true
                                                stop loop

                                        if {_quest} is true:

                                            if arg-5 is set:

                                                if arg-5 is "true":
                                                    send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &fYou magically finished the quest <##5EB6B6>%arg-4% &ffor <##5EB6B6>%arg-2%.&f"
                                                    set {quests::%arg-4%::interaction::%{_u}%::*} to (true, true, true, true, false)
                                                    set {quests::%arg-4%::talked::%{_u}%} to true
                                                    set {quests::%arg-4%::completed::%{_u}%} to true
                                                else if arg-5 is "false":
                                                    send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &fYou cleared the progress of quest <##5EB6B6>%arg-4% &ffor <##5EB6B6>%arg-2%.&f"
                                                    clear {quests::%arg-4%::talked::%{_u}%}
                                                    clear {quests::%arg-4%::completed::%{_u}%}
                                                    clear {quests::%arg-4%::interaction::%{_u}%::*}
                                                else:
                                                    send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &cPlease specify true or false."

                                            else:
                                                send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &cThis command option does not exist."

                                        else:
                                            send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &cThis quest does not exist."

                                    else:
                                        send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &cThis command option does not exist."
                                else:
                                    send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &cThis command option does not exist."  

                            else:
                                send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &cPlease specify a command option."

                        else:
                            send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &cThis player has never been on the server."

                    else:
                        send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &cThis player does not exist."

                else:
                    send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &cPlease specify a player."  

            else:
                send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &cThis command option does not exist."

        else:
            send "<##508a7f>[<##5EB6B6>&lQUEST<##508a7f>] » &cPlease specify a command option."

on tab complete of "/quest":

    if tab arg-1 is not "user": # add new options  
        clear {_tabCompletion::*}
        set {_tabCompletion::*} to ("user") # add new options
        set tab completions for position 1 to {_tabCompletion::*}

    if tab arg-1 is "user":
        clear {_tabCompletion::*}
        loop players:
            add loop-value to {_tabCompletion::*}
            set tab completions for position 2 to {_tabCompletion::*}

    set {_user} to tab arg-2 parsed as offline player
    set {_u} to uuid of {_user}
    if {level::%{_u}%} is set:

        if tab arg-3 is not "set" or "clear" or "list": # add new options 
            clear {_tabCompletion::*}
            set {_tabCompletion::*} to ("clear", "set", "list") # add new options 
            set tab completions for position 3 to {_tabCompletion::*}

    set {_quests::*} to ("firstSlay", "animalFood", "rootedChallenge", "mysteryItem", "luckyCarrot", "conjecture", "healthyCure", "botany", "shadeMatter", "lastBreath") # add new quests 
    loop {_quests::*}:
        if tab arg-4 is loop-value:
            set {_quest} to true

    if tab arg-3 is "set":
        set tab completions for position 4 to {_quests::*}
    
    if {_quest} is true:
        set tab completions for position 5 to "true" and "false"