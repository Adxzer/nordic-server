function carrotDrop(player: player) :: number:
    set {_itemList::*} to ({items::armorItems::*}, {items::dropItems::*}, {items::toolItems::*}, {items::economyItems::*}, {items::consumableItems::*})

    loop {_itemList::*}:
        if uncolored name of loop-value contains "Hoe":
            add loop-value to {_items::*}
 
    set {_xp} to 1
    set {_boost} to coreBreakBoost({_player}, ({_player}'s tool), ({_items::*}))

    loop {_itemList::*}:
        if uncolored name of loop-value is "Carrot":
            set {_drop} to loop-value

    set {_return} to coreBreakDrop({_player}, ({_player}'s tool), ({_items::*}), {_drop}, 1 + {_boost}, 2 + {_boost}, {_xp})
    bestiaryCheckItem({_player}, (uncolored name of {_drop}), floor({_return}))
    return floor({_return})

on break:
    
    if event-block is carrots[age=7]:

        if {quests::luckyCarrot::interaction::%player's uuid%::6} is not false:

            cancel drops
            set event-block to carrot plant

            carrotDrop(player)
            
            wait 2 minutes
            set event-block to ripe carrot plant