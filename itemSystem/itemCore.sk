function getSellValue(item: item, amount: number) :: number:

    if {_amount} is not set:
        set {_amount} to 1

    if uncolored name of {_item} is "Common Sword":
        return 8 * {_amount}
    else if uncolored name of {_item} is "Zombie Sword":
        return 26 * {_amount}
    else if uncolored name of {_item} is "Ghoul Sword":
        return 52 * {_amount}
    else if uncolored name of {_item} is "Crypto Sword":
        return 98 * {_amount}
    else if uncolored name of {_item} is "Beginners Hoe":
        return 6 * {_amount}
    else if uncolored name of {_item} is "Harvesting Hoe":
        return 18 * {_amount}
    else if uncolored name of {_item} is "Soiled Hoe":
        return 34 * {_amount}
    else if uncolored name of {_item} is "Skeleton Bow":
        return 24 * {_amount}
    else if uncolored name of {_item} is "Ghoul Bow":
        return 67 * {_amount}
    else if uncolored name of {_item} is "Wheat Skull":
        return 6 * {_amount}
    else if uncolored name of {_item} is "Wheat Tunic":
        return 10 * {_amount}
    else if uncolored name of {_item} is "Wheat Pants":
        return 8 * {_amount}
    else if uncolored name of {_item} is "Wheat Boots":
        return 4 * {_amount}
    else if uncolored name of {_item} is "Ghoul Skull":
        return 28 * {_amount}
    else if uncolored name of {_item} is "Ghoul Chestplate":
        return 34 * {_amount}
    else if uncolored name of {_item} is "Ghoul Pants":
        return 31 * {_amount}
    else if uncolored name of {_item} is "Ghoul Boots":
        return 25 * {_amount}
    else if uncolored name of {_item} is "Crypto Skull":
        return 72 * {_amount}
    else if uncolored name of {_item} is "Crypto Chestplate":
        return 83 * {_amount}
    else if uncolored name of {_item} is "Crypto Pants":
        return 76 * {_amount}
    else if uncolored name of {_item} is "Crypto Boots":
        return 66 * {_amount}
    else if uncolored name of {_item} is "Arrow":
        return 1 * {_amount}
    else if uncolored name of {_item} is "Bone":
        return 1 * {_amount}
    else if uncolored name of {_item} is "Egg":
        return 8 * {_amount}
    else if uncolored name of {_item} is "Feather":
        return 1 * {_amount}
    else if uncolored name of {_item} is "Gold Ingot":
        return 13 * {_amount}
    else if uncolored name of {_item} is "Leather":
        return 1 * {_amount}
    else if uncolored name of {_item} is "Platinum Teeth":
        return 42 * {_amount}
    else if uncolored name of {_item} is "Raw Beef":
        return 1 * {_amount}
    else if uncolored name of {_item} is "Raw Chicken":
        return 1 * {_amount}
    else if uncolored name of {_item} is "Raw Mutton":
        return 1 * {_amount}
    else if uncolored name of {_item} is "Rooted Heart":
        return 87 * {_amount}
    else if uncolored name of {_item} is "Rooted Skin":
        return 32 * {_amount}
    else if uncolored name of {_item} is "Rotten Flesh":
        return 1 * {_amount}
    else if uncolored name of {_item} is "Seeds":
        return 0 * {_amount}
    else if uncolored name of {_item} is "Wheat":
        return 0 * {_amount}
    else if uncolored name of {_item} is "Hay":
        return 2 * {_amount}
    else if uncolored name of {_item} is "Wool":
        return 3 * {_amount}
    else if uncolored name of {_item} is "Red Mushroom":
        return 1 * {_amount}
    else if uncolored name of {_item} is "Brown Mushroom":
        return 1 * {_amount}
    else if uncolored name of {_item} is "String":
        return 2 * {_amount}
    else if uncolored name of {_item} is "Potato":
        return 0 * {_amount}
    else if uncolored name of {_item} is "Carrot":
        return 0 * {_amount}
    else if uncolored name of {_item} is "Web":
        return 3 * {_amount}
    else if uncolored name of {_item} is "Living Essence":
        return 124 * {_amount}
    else if uncolored name of {_item} is "Stuffed Potato":
        return 4 * {_amount}
    else if uncolored name of {_item} is "Gleaming Carrot":
        return 4 * {_amount}
    else if uncolored name of {_item} is "Enormous Shroom":
        return 23 * {_amount}
    else if uncolored name of {_item} is "Spider Heart":
        return 65 * {_amount}
    else if uncolored name of {_item} is "Prudent Axe":
        return 72 * {_amount}
    else if uncolored name of {_item} is "Mushrew Axe":
        return 112 * {_amount}
    else if uncolored name of {_item} is "Curative Sword":
        return 212 * {_amount}
    else if uncolored name of {_item} is "Revenant Bow":
        return 68 * {_amount}
    else if uncolored name of {_item} is "Jockey Bow":
        return 142 * {_amount}
    else if uncolored name of {_item} is "Grime Hoe":
        return 42 * {_amount}
    else if uncolored name of {_item} is "Fabled Hoe":
        return 74 * {_amount}
    else if uncolored name of {_item} is "Shield":
        return 10 * {_amount}
    else if uncolored name of {_item} is "Red Apple":
        return 7 * {_amount}
    else if uncolored name of {_item} is "Brownie":
        return 28 * {_amount}
    else if uncolored name of {_item} is "Mana Shard":
        return 11 * {_amount}
    else if uncolored name of {_item} is "Crystalline":
        return 33 * {_amount}
    else if uncolored name of {_item} is "Orgone Skull":
        return 44 * {_amount}
    else if uncolored name of {_item} is "Orgone Tunic":
        return 52 * {_amount}
    else if uncolored name of {_item} is "Orgone Pants":
        return 48 * {_amount}
    else if uncolored name of {_item} is "Orgone Boots":
        return 40 * {_amount}
    else if uncolored name of {_item} is "Remedial Skull":
        return 90 * {_amount}
    else if uncolored name of {_item} is "Remedial Tunic":
        return 108 * {_amount}
    else if uncolored name of {_item} is "Remedial Pants":
        return 99 * {_amount}
    else if uncolored name of {_item} is "Remedial Boots":
        return 83 * {_amount}
    else if uncolored name of {_item} is "Serrated Skull":
        return 132 * {_amount}
    else if uncolored name of {_item} is "Serrated Tunic":
        return 162 * {_amount}
    else if uncolored name of {_item} is "Serrated Pants":
        return 148 * {_amount}
    else if uncolored name of {_item} is "Serrated Boots":
        return 123 * {_amount}
    else if uncolored name of {_item} is "Vicious Skull":
        return 132 * {_amount}
    else if uncolored name of {_item} is "Vicious Tunic":
        return 162 * {_amount}
    else if uncolored name of {_item} is "Vicious Pants":
        return 148 * {_amount}
    else if uncolored name of {_item} is "Vicious Boots":
        return 123 * {_amount}
    else if uncolored name of {_item} is "Heroic Skull":
        return 132 * {_amount}
    else if uncolored name of {_item} is "Heroic Tunic":
        return 162 * {_amount}
    else if uncolored name of {_item} is "Heroic Pants":
        return 148 * {_amount}
    else if uncolored name of {_item} is "Heroic Boots":
        return 123 * {_amount}
    else if uncolored name of {_item} is "Pellucid":
        return 75 * {_amount}
    else if uncolored name of {_item} is "Nature Brace":
        return 82 * {_amount}
    else if uncolored name of {_item} is "Blemish":
        return 94 * {_amount}
    else if uncolored name of {_item} is "Wart":
        return 0 * {_amount}
    else if uncolored name of {_item} is "Faded Rose":
        return 23 * {_amount}
    else if uncolored name of {_item} is "Infernalite":
        return 31 * {_amount}
    else if uncolored name of {_item} is "Spikes":
        return 7 * {_amount}
    else if uncolored name of {_item} is "Lava Web":
        return 28 * {_amount}
    else if uncolored name of {_item} is "Teplate Cap":
        return 44 * {_amount}
    else if uncolored name of {_item} is "Teplate Tunic":
        return 52 * {_amount}
    else if uncolored name of {_item} is "Teplate Pants":
        return 48 * {_amount}
    else if uncolored name of {_item} is "Teplate Boots":
        return 40 * {_amount}
    else if uncolored name of {_item} is "Inured Demis":
        return 23 * {_amount}
    else if uncolored name of {_item} is "Gold Nugget":
        return 3 * {_amount}
    else if uncolored name of {_item} is "Teplate Sticks":
        return 66 * {_amount}
    else if uncolored name of {_item} is "Deity Shard":
        return 124 * {_amount}
    else if uncolored name of {_item} is "Deity Crystal":
        return 272 * {_amount}
    else if uncolored name of {_item} is "Firm":
        return 68 * {_amount}
    else if uncolored name of {_item} is "Berries":
        return 0 * {_amount}
    else if uncolored name of {_item} is "Grasp Leaf":
        return 83 * {_amount}
    else if uncolored name of {_item} is "Twine":
        return 43 * {_amount}
    else if uncolored name of {_item} is "Frozen Ice":
        return 48 * {_amount}
    else if uncolored name of {_item} is "Moss Hunk":
        return 34 * {_amount}
    else if uncolored name of {_item} is "Ice Vein":
        return 89 * {_amount}
    else if uncolored name of {_item} is "Moss Turf":
        return 4 * {_amount}
    else if uncolored name of {_item} is "Ardour":
        return 81 * {_amount}
    else if uncolored name of {_item} is "Glossy Berry":
        return 55 * {_amount}
    else if uncolored name of {_item} is "Shiny Apple":
        return 61 * {_amount}
    
    set {_list::*} to "Woodland Tree", "Spiritual Prompt", "Basalt Slag" and "Divinity Cake"
    set {_check::*} to " I", " II", " III", " IV" and " V"
    loop {_list::*}:
        if uncolored name of {_item} is uncolored loop-value:
            return 0
        else:
            loop {_check::*}:
                if uncolored name of {_item} is uncolored "%loop-value-1%%loop-value-2%":
                    return 0

function checkFuseItem(items: itemtypes) :: string:
    
    set {_itemList::*} to ({items::armorItems::*}, {items::dropItems::*}, {items::toolItems::*}, {items::economyItems::*}, {items::consumableItems::*})
    loop {_itemList::*}:
        if uncolored name of loop-value is "Deity Crystal":
            set {_deityCrystal} to loop-value
        else if uncolored name of loop-value is "Teplate Sticks":
            set {_teplateSticks} to loop-value
        else if uncolored name of loop-value is "Teplate Cap":
            set {_teplateCap} to loop-value 
        else if uncolored name of loop-value is "Teplate Tunic":
            set {_teplateTunic} to loop-value 
        else if uncolored name of loop-value is "Teplate Pants":
            set {_teplatePants} to loop-value 
        else if uncolored name of loop-value is "Teplate Boots":
            set {_teplateBoots} to loop-value
        else if uncolored name of loop-value is "Pellucid":
            set {_pellucid} to loop-value
        else if uncolored name of loop-value is "Nature Brace":
            set {_natureBrace} to loop-value
        else if uncolored name of loop-value is "Blemish":
            set {_blemish} to loop-value
    
    loop {_items::*}:
        if uncolored name of loop-value is uncolored name of {_deityCrystal}:
            set {_clear} to true
            
    if {_clear} is true:

        loop {_items::*}:
            if uncolored name of loop-value is uncolored name of {_teplateSticks}:
                set {_tool} to true
            else if uncolored name of loop-value is uncolored name of {_teplateCap}:
                set {_cap} to true
            else if uncolored name of loop-value is uncolored name of {_teplateTunic}:
                set {_tunic} to true
            else if uncolored name of loop-value is uncolored name of {_teplatePants}:
                set {_pants} to true
            else if uncolored name of loop-value is uncolored name of {_teplateBoots}:
                set {_boots} to true

        if {_tool}, {_armor} or {_bow} is true:

            loop {_items::*}:
                if uncolored name of loop-value is uncolored name of {_pellucid}:
                    set {_mana} to true
                else if uncolored name of loop-value is uncolored name of {_natureBrace}:
                    set {_archer} to true
                else if uncolored name of loop-value is uncolored name of {_blemish}:
                    set {_damage} to true

            if {_mana}, {_damage} or {_archer} is true:

                if {_mana} and {_tool} is true:
                    return "Serrated Staff"
                else if {_mana} and {_cap} is true:
                    return "Serrated Skull"
                else if {_mana} and {_tunic} is true:
                    return "Serrated Tunic"
                else if {_mana} and {_pants} is true:
                    return "Serrated Pants"
                else if {_mana} and {_boots} is true:
                    return "Serrated Boots"
                else if {_archer} and {_tool} is true:
                    return "Heroic Bow"
                else if {_archer} and {_cap} is true:
                    return "Heroic Skull"
                else if {_archer} and {_tunic} is true:
                    return "Heroic Tunic"
                else if {_archer} and {_pants} is true:
                    return "Heroic Pants"
                else if {_archer} and {_boots} is true:
                    return "Heroic Boots"
                else if {_damage} and {_tool} is true:
                    return "Vicious Blade"
                else if {_damage} and {_cap} is true:
                    return "Vicious Skull"
                else if {_damage} and {_tunic} is true:
                    return "Vicious Tunic"
                else if {_damage} and {_pants} is true:
                    return "Vicious Pants"
                else if {_damage} and {_boots} is true:
                    return "Vicious Boots"

    return "none"

command /item [<text>] [<text>] [<text>] [<text>] [<text>] [<text>]:
    permission: op
    permission message: Unknown command. Type "/help" for help.
    trigger:

        if arg-1 is set:

            if arg-1 is "user":
     
                if arg-2 is set:

                    if arg-2 parsed as offline player is offline player:

                        set {_player} to arg-2 parsed as offline player
                        set {_u} to uuid of {_player}

                        if {level::%{_u}%} is set:

                            if arg-3 is set:

                                if arg-3 is "give" or "take":

                                    if arg-4 is set:

                                        if arg-4 is "economy", "drop", "tool", "consumable" or "armor":

                                            if arg-5 is set:

                                                loop {items::%arg-4%Items::*}:
                                                    set {_split::*} to uncolored name of loop-value split at " "
                                                    if {_split::2} is set:
                                                        set {_name} to "%{_split::1} in lower case%%{_split::2}%"
                                                    else:
                                                        set {_name} to {_split::1} in lower case
                                                    if arg-5 is {_name}:
                                                        set {_item} to true
                                                        set {_give} to loop-value
                                                        stop loop

                                                if {_item} is true:

                                                    if arg-6 is set:

                                                        set {_amount} to arg-6 parsed as integer

                                                        if arg-6 parsed as integer is integer:

                                                            if arg-3 is "give":
                                                                give {_player} {_amount} of {_give}
                                                                send "&b[ITEM] » &fYou gave &b%arg-6%x %uncolored name of {_give}%&f to &b%arg-2%&f."
                                                            else if arg-3 is "take":

                                                                loop player's inventory:
                                                                    if loop-value's type is {_give}'s type:
                                                                        set {_contains} to true
                                                                        stop loop

                                                                if {_contains} is true:                            
                                                                    remove {_amount} of {_give} from {_player} 
                                                                    send "&b[ITEM] » &fYou took &b%arg-6%x %uncolored name of {_give}%&f from &b%arg-2%&f."

                                                                else:
                                                                    send "&b[ITEM] » &cThe player does not have this item."
                                                                                                    
                                                            else:
                                                                send "&b[ITEM] » &cThis command option does not exist." 

                                                    else if arg-6 is not set:

                                                        if arg-3 is "give":
                                                            give {_player} {_give}
                                                            send "&b[ITEM] » &fYou gave &b1x %uncolored name of {_give}%&f to &b%arg-2%&f."
                                                        else if arg-3 is "take":

                                                            loop player's inventory:
                                                                if loop-value's type is {_give}'s type:
                                                                    set {_contains} to true
                                                                    stop loop

                                                            if {_contains} is true:                            
                                                                remove {_give} from {_player} 
                                                                send "&b[ITEM] » &fYou took &b1x %uncolored name of {_give}%&f from &b%arg-2%&f."

                                                            else:
                                                                send "&b[ITEM] » &cThe player does not have this item."
                                                                                                    
                                                        else:
                                                            send "&b[ITEM] » &cThis command option does not exist."  
                                                                
                                                    else:
                                                        send "&b[ITEM] » &cThis command option does not exist."   

                                                else:
                                                    send "&b[ITEM] » &cThis item does not exist."
                                                    
                                            else:
                                                send "&b[ITEM] » &cPlease specify an item."

                                        else:
                                            send "&b[ITEM] » &cThis command option does not exist."

                                    else:
                                        send "&b[ITEM] » &cPlease specify a command option."

                                else:
                                    send "&b[ITEM] » &cThis command option does not exist."

                            else:
                                send "&b[ITEM] » &cPlease specify a command option."

                        else:
                            send "&b[ITEM] » &cThis player has never been on the server."

                    else:
                        send "&b[ITEM] » &cThis player does not exist."

                else:
                    send "&b[ITEM] » &cPlease specify a player."  

            else:
                send "&b[ITEM] » &cThis command option does not exist."

        else:
            send "&b[ITEM] » &cPlease specify a command option."

on tab complete of "/item":

    if tab arg-1 is not "user": # add new options  
        clear {_tabCompletion::*}
        set {_tabCompletion::*} to ("user") # add new options
        set tab completions for position 1 to {_tabCompletion::*}

    if tab arg-1 is "user":
        clear {_tabCompletion::*}
        loop players:
            add loop-value to {_tabCompletion::*}
            set tab completions for position 2 to {_tabCompletion::*}

    set {_user} to tab arg-2 parsed as offline player
    set {_u} to uuid of {_user}
    if {level::%{_u}%} is set:

        if tab arg-3 is not "give" or "take": # add new options 
            clear {_tabCompletion::*}
            set {_tabCompletion::*} to ("give", "take") # add new options 
            set tab completions for position 3 to {_tabCompletion::*}

    set {_categories::*} to ("economy", "drop", "tool", "armor", "consumable") # add new categories 
    if tab arg-3 is "give" or "take":
        set tab completions for position 4 to {_categories::*} 
    loop {_categories::*}:
        if tab arg-4 is loop-value:
            set {_item} to true
    
    if {_item} is true:
        clear {_tabCompletion::*}
        set {_category} to tab arg-4
        loop {items::%{_category}%Items::*}:
            set {_split::*} to uncolored name of loop-value split at " "
            if {_split::2} is set:
                set {_name} to "%{_split::1} in lower case%%{_split::2}%"
            else:
                set {_name} to {_split::1} in lower case
            add {_name} to {_tabCompletion::*}
        set tab completions for position 5 to {_tabCompletion::*}